module Test2 where


data B = BBB
data A a = BB a| CCC a| NN (a -> Int)
--data A = DD
aaa :: a -> a -> A (A a)
aaa aa bb = let a = CCC bb
                b = BB a
             in b
bbb = 1 * 2  + 3 - 0
fff = BBB
eee = 3:[1, 2]
ggg (BB aaa) = if False then aaa else aaa
hhh 1 = case 1 of
            yyy -> 2
            xxx -> 1
nnn :: Int -> Int
nnn a = a
mmm = nnn 2
ttt = let f = \a->a
       in (f 1) + (f 2)
--ooo :: Int -> C
ooo = BBB
